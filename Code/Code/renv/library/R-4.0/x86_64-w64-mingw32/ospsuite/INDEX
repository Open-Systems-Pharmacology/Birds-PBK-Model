.ImporterErrorTypeToDataSetErrorType
                        Mapping of string representation for the error
                        types supported by DataSet to the values
                        supported in the importer configuration
.getConcurrentSimulationRunnerResults
                        Get SimulationResults from
                        ConcurrentSimulationRunner
.getPathToPKSimInstallDir
                        Tries to find the installation path for a
                        specific version of PK-Sim. Searching is done
                        in the following order: 1. Search via Windows
                        registry entry 2. Search via filesystem in a
                        guessed installation folder from the
                        base.search.folder (fallback 1)
.getPathToPKSimInstallDirFromFileSystem
                        Tries to find the installation path for a
                        specific version of PK-Sim via the filesystem.
                        Searching is done in the following order: 1.
                        Search via filesystem in a guessed installation
                        folder from the base.search.folder 2. Search
                        via filesystem for PKSim.exe recursively from
                        the defined base.search.folder (fallback)
.getPathToPKSimInstallDirFromRegistry
                        Tries to find the installation path for a
                        specific version of PK-Sim from an Windows
                        registry entry.
.loadDataRepositoryFromPKML
                        Loads a data repository (typically observed
                        data) from a PKML file and returns the loaded
                        observed data. The pkml files are typically
                        exported from PK-Sim or MoBi
AgingData               AgingData
AllMatchingMethod       Names of the .NET container tasks of the type
                        "AllXXXMatching"
AllPathsInMethod        Names of the .NET container tasks of the type
                        "AllXXXPathsIn"
ApiConfig               ApiConfig
Application             Application
Cache                   Cache
CompareBy               How should comparison of entities be performed
Container               Container
DataColumn              DataColumn
DataErrorType           Supported types of the error
DataImporterConfiguration
                        DataImporterConfiguration
DataRepository          DataRepository
DataSet                 DataSet
DotNetWrapper           DotNetRwapper
Entity                  Entity
Formula                 Formula
Gender                  Default genders defined in PK-Sim
HumanPopulation         Default human population defined in PK-Sim
IndividualCharacteristics
                        IndividualCharacteristics
Interval                Interval
Molecule                Molecule
MoleculeOntogeny        MoleculeOntogeny
MoleculeParameter       Standard molecule parameter names typically
                        available in an endogenous molecule (enzyme,
                        transporter etc...) coming from PK-Sim
ObjectBase              ObjectBase
OutputSchema            OutputSchema
OutputSelections        OutputSelections
PKParameter             PKParameter
PKParameterSensitivity
                        PKParameterSensitivity
Parameter               Parameter
ParameterRange          ParameterRange
Population              Population
PopulationCharacteristics
                        PopulationCharacteristics
Printable               Printable
Quantity                Quantity
QuantityPKParameter     QuantityPKParameter
QuantitySelection       QuantitySelection
SensitivityAnalysis     SensitivityAnalysis
SensitivityAnalysisResults
                        SensitivityAnalysisResults
SensitivityAnalysisRunOptions
                        SensitivityAnalysisRunOptions
Simulation              Simulation
SimulationBatch         SimulationBatch
SimulationBatchOptions
                        SimulationBatchOptions
SimulationBatchRunValues
                        SimulationBatchRunValues
SimulationPKAnalyses    SimulationPKAnalyses
SimulationResults       SimulationResults
SimulationRunOptions    SimulationRunOptions
SimulationSettings      SimulationSettings
SnapshotParameter       SnapshotParameter
SolverSettings          SolverSettings
Species                 Default species defined in PK-Sim
StandardContainer       Standard containers typically available in a
                        PBPK simulation
StandardOntogeny        List of ontogeny supported in PK-Sim
StandardPKParameter     Standard PK-Parameters types defined in
                        OSPSuite This is only used to defined how a
                        user defined PK Parameter should be calculated
StandardPath            Standard parameter paths typically available in
                        a PBPK simulation
UserDefinedPKParameter
                        UserDefinedPKParameter
ValuePoint              ValuePoint
addOutputInterval       Adds an interval to the output schema of the
                        simulation
addOutputs              Adds the quantities as output into the
                        'simulation'. The quantities can either be
                        specified using explicit instances or using
                        paths.
addUserDefinedPKParameter
                        Adds and returns a User-Defined PK-Parameter to
                        the managed list of PK-Parameters
allAvailableDimensions
                        Returns the name of all available dimensions
                        defined in the OSPSuite platform
allPKParameterNames     Returns the name of all pk parameters defined
                        in the system
calculatePKAnalyses     Calculates the pkAnalyses for all output values
                        available in 'results'.
clearOutputIntervals    Removes all intervals as well as all single
                        time points from the output schema defined in
                        'simulation'
clearOutputs            Removes all selected output from the given
                        'simulation'
createDistributions     Creates the parameter distributions based on
                        the given individual
                        'individualCharacteristics'
createIndividual        Creates an individual using the PKSim Database
createIndividualCharacteristics
                        Creates an individual using the PKSim Database.
createPopulation        Creates an population using the PKSim Database
createPopulationCharacteristics
                        Creates the population characteristics used to
                        create a population
createSimulationBatch   Creates and returns an instance of a
                        'SimulationBatch' that can be used to
                        efficiently vary parameters and initial values
                        in a simulation
dataSetToDataFrame      Converts a list of 'DataSet' objects to a
                        data.frame
encodeUnit              This is required to ensure that we have no
                        issue using the mu symbol in different OS See
                        https://github.com/Open-Systems-Pharmacology/OSPSuite-R/issues/476
                        for details
enum                    Create an enumeration to be used instead of
                        arbitrary values in code.
enumGetValue            Return the value that is stored under the given
                        key. If the key is not present, an error is
                        thrown.
enumHasKey              Check if an enum has a certain key.
enumKeys                Return all keys of an enum
enumPut                 Add a new key-value pairs to an enum.
enumRemove              Remove an entry from the enum.
enumValues              Return the values stored in an enum
expandPath              Returns the expanded path for 'path' and ensure
                        that encoding is applied properly
exportIndividualSimulations
                        Export simulation PKMLs for given
                        'individualIds'. Each pkml file will contain
                        the original simulation updated with parameters
                        of the corresponding individual.
exportPKAnalysesToCSV   Saves the pK-analyses to csv file
exportPopulationToCSV   Saves the population to csv file
exportResultsToCSV      Saves the simulation results to csv file
exportSensitivityAnalysisResultsToCSV
                        Saves the simulation analysis results to csv
                        file
getAllContainerPathsIn
                        Retrieves the path of all containers defined in
                        the container and all its children
getAllContainersMatching
                        Retrieve all sub containers of a parent
                        container (simulation or container instance)
                        matching the given path criteria
getAllEntitiesMatching
                        Retrieves all entities of a container
                        (simulation or container instance) matching the
                        given path criteria.
getAllEntityPathsIn     Retrieves all path of entities defined within
                        the container (simulation or container
                        instance)
getAllMoleculePathsIn   Retrieves the paths of all molecules defined in
                        the container and all its children
getAllMoleculesMatching
                        Retrieve all molecules of a container
                        (simulation or container instance) matching the
                        given path criteria
getAllParameterPathsIn
                        Retrieves the path of all parameters defined in
                        the container and all its children
getAllParametersForSensitivityAnalysisMatching
                        Retrieve all parameters of the given simulation
                        matching the given path criteria and also
                        potential candidate for sensitivity variation
getAllParametersMatching
                        Retrieve all parameters of a container
                        (simulation or container instance) matching the
                        given path criteria
getAllQuantitiesMatching
                        Retrieve all quantities of a container
                        (simulation or container instance) matching the
                        given path criteria
getAllQuantityPathsIn   Retrieves the path of all quantities defined in
                        the container and all its children
getAllStateVariablesPaths
                        Get the paths of all state variable quantities
                        of the simulation
getBaseUnit             Get base unit of a dimension
getContainer            Retrieve a single container by path under the
                        given container
getDimensionByName      Returns the an instance of the dimension with
                        the given name if found or NULL otherwise
getDimensionForUnit     Returns the name of dimension that can be used
                        to support the given unit or null if the
                        dimension cannot be found
getDimensionTask        Return an instance of the .NET Task
                        'DimensionTask' This is purely for optimization
                        purposes
getDimensionsEnum       #'Function to return an enum of all available
                        dimensions
getEntity               Retrieve a single entity by path in the given
                        container
getEnumKey              Get the key mapped to the given value in an
                        'enum'
getMolecule             Retrieve a single molecule by path in the given
                        container
getNetTask              Returns an instance of the specified .NET Task
getOSPSuiteSetting      Get the value of a global ospsuite-R setting.
getOutputValues         Returns the simulated values for the selected
                        outputs (e.g molecules or parameters)
getParameter            Retrieve a single parameter by path in the
                        given container
getParameterDisplayPaths
                        Retrieves the display path of the parameters
                        defined by paths in the simulation
getPropertyValue        Returns the value of property named
                        'propertyName' from .NET object instance
                        'netObject'
getPropertyValues       Returns a list containing all properties
                        'propertyName' from the .NET objects
                        'netObjects'
getQuantity             Retrieve a single quantity by path in the given
                        container
getQuantityDisplayPaths
                        Retrieves the display path of the quantity
                        defined by path in the simulation
getSimulationTree       Given a simulation file path or an instance of
                        a simulation, traverses the simulation
                        structure and returns a tree like structure
                        allowing for intuitive navigation in the
                        simulation tree
getStandardMoleculeParameters
                        Returns a list containing all standard global
                        parameters defined in a 'simulation' for given
                        'moleculeName'. These parameters are typically
                        located directly under the container named
                        after the 'moleculeName'. For the list of
                        standard parameters
getUnitsEnum            Loop through dimensions and build a list
                        containing an enum of all units available for
                        each dimension
getUnitsForDimension    Returns a vector containing all units defined
                        in the dimension
hasDimension            Dimension existence
hasUnit                 Unit existence
ifNotNull               ifnotnull
importPKAnalysesFromCSV
                        Loads the pK-analyses from csv file
importResultsFromCSV    Imports the simulation results from one or more
                        csv files
importSensitivityAnalysisResultsFromCSV
                        Imports the simulation analysis results from
                        one or more csv files
initPKSim               Loads the PKSim.R that will enable create
                        individual and create population workflows.
initPackage             Load the OSPSuite R to .NET Binding
isOfType                Check if the provided object is of certain type
loadAgingDataFromCSV    Loads aging data (typically generated from
                        PK-Sim) i
loadDataSetFromPKML     Loads data (typically observed data) from a
                        PKML file and creates a 'DataSet' from it. The
                        pkml files are typically exported from PK-Sim
                        or MoBi.
loadDataSetsFromExcel   Load data sets from excel
loadPopulation          Loads a population from a csv file and returns
                        the population.
loadSimulation          Loads a simulation from a pkml file and returns
                        the simulation. If the passed simulation file
                        has been loaded before, the simulation is not
                        loaded again but a cached object is returned.
                        This behavior can be overridden.
netEnumName             Retrieves the name of the constant in the
                        specified enumeration that has the specified
                        value.
ospDimensions           Supported dimensions defined as a named list
ospUnits                Supported units defined as a named list of
                        lists
parameterValueListFrom
                        Converts a list of .NET 'ParameterValue' into a
                        list with 2 entries: 'paths', 'values'. A 3rd
                        optional entry 'units' will be defined if the
                        parameter 'addUnits' is set to 'TRUE'. Note:
                        Units are only available for .NET object of
                        type 'ParameterValueWithUnit'
pkAnalysesAsDataFrame   Convert the pk-Analysis to data frame
pkParameterByName       Returns an instance of a PK-Parameter by name
                        or NULL if the parameter by name is not found
populationAsDataFrame   Creates a data.frame containing one column for
                        each parameter defined in the population
potentialVariableParameterPathsFor
                        Returns an array of parameter path with one
                        entry for each parameter that is used in the
                        simulation and can potentially be used for
                        sensitivity analysis
removeAllUserDefinedPKParameters
                        Removes all User-Defined PK-Parameters that may
                        have been added to the system
removeSimulationFromCache
                        Removes a simulation from simulations cache.
resetSimulationCache    Clears cache of loaded simulations
runSensitivityAnalysis
                        Runs a sensitivity analysis
runSimulation           DEPRECATED 'runSimulations' should be used in
                        favor of 'runSimulation'. The latter will be
                        removed in future releases Runs one simulation
                        (individual or population) and returns a
                        'SimulationResults' object containing all
                        results of the simulation.
runSimulationBatches    Run simulation batches
runSimulations          Runs one simulation (individual or population)
                        and returns a 'SimulationResults' object
                        containing all results of the simulation.
                        Alternatively if multiple simulations are
                        provided, they will be run concurrently. This
                        feature is only supported for individual
                        simulation
saveDataSetToPKML       Save the 'DataSet' to pkml
savePKAnalysesToCSV     Saves the pK-analyses to csv file
savePopulationToCSV     Saves the population to csv file
saveResultsToCSV        Saves the simulation results to csv file
saveSensitivityAnalysisResultsToCSV
                        Saves the simulation analysis results to csv
                        file
saveSimulation          Saves a simulation to pkml file
scaleParameterValues    Scale current values of parameters using a
                        factor
scaleQuantityValues     Scale current values of quantities using a
                        factor
setMoleculeInitialValues
                        Set molecule start values
setMoleculeScaleDivisors
                        Set molecule scale divisors
setMoleculeValuesByPath
                        Set molecule start values in the simulation by
                        path
setOutputInterval       Clears the output interval from the simulation
                        and adds a new one.
setParameterValues      Set values of parameters
setParameterValuesByPath
                        Set the values of parameters in the simulation
                        by path
setQuantityValues       Set values of quantity
setQuantityValuesByPath
                        Set the values of parameters in the simulation
                        by path
splitPopulationFile     Loads a population from the 'csvPopulationFile'
                        and split the loaded population according to
                        'numberOfCores'.
toBaseUnit              Converts a value given in a specified unit into
                        the base unit of a quantity
toDisplayUnit           Converts a value given in base unit of a
                        quantity into the display unit of a quantity
toList                  Make sure the object is a list
toObjectType            Transforms a single .NET object or a list of
                        .NET Object to their corresponding wrapper
                        class in R. Note that if the object is a single
                        object, NULL will be returned if the .NET
                        object is null. This allows semantic
                        equivalence between .NET and R
toPathArray             Convert a path defined as string to a path
                        array
toPathString            Convert a path array to a path as string with
                        entries separated by '|'
toUnit                  Converts a value given in base unit of a
                        quantity into a target unit
uniqueEntities          Extract Unique Elements of type 'Entity'
updatePKParameter       Updates some properties of a PK-Parameter
                        (displayName and displayUnit)
validateDimension       Validate dimension
validateEnumValue       Check if 'value' is in the given enum. If not,
                        stops with an error.
validateIsOfType        Check if the provided object is of certain
                        type. If not, stop with an error.
validateUnit            Validate unit
